{"ast":null,"code":"var _jsxFileName = \"E:\\\\backup_project\\\\review_1\\\\SGP\\\\frontend\\\\src\\\\pages\\\\AdminLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"../styles/forms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  // State to handle input fields\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n\n  // Hardcoded admin credentials (for demo purposes)\n  const adminCredentials = {\n    email: 'admin@gmail.com',\n    // Set your admin email\n    password: 'admin@1.' // Set your admin password\n  };\n  const handleLogin = () => {\n    // Check if the entered credentials match the hardcoded ones\n    if (email === adminCredentials.email && password === adminCredentials.password) {\n      // Redirect to the admin home if login is successful\n      navigate('/admin-home');\n    } else {\n      // Show error if credentials do not match\n      alert('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storage-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftsection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"admin-login-link\",\n          onClick: handleFacultyLoginRedirect,\n          children: \"Faculty Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"admin-login-link\",\n          onClick: handleAdminLoginRedirect,\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"Student Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightsection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1-line-height\",\n        style: {\n          fontSize: '45px'\n        },\n        children: \"Welcome Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formsgroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputEmail\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Email-id\",\n            className: \"formscontrol\",\n            id: \"inputEmail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formsgroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputPassword\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'text' : 'password',\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Password\",\n            className: \"formscontrol\",\n            id: \"inputPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showPassword\",\n            checked: showPassword,\n            onChange: () => setShowPassword(!showPassword)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"showPassword\",\n            children: \"Show Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-main\",\n            onClick: handleLogin,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"/X3ej+JwrWcKAZcn1SOZ96mIG+Y=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AdminLogin","_s","email","setEmail","password","setPassword","showPassword","setShowPassword","navigate","adminCredentials","handleLogin","alert","className","children","type","onClick","handleFacultyLoginRedirect","fileName","_jsxFileName","lineNumber","columnNumber","handleAdminLoginRedirect","style","marginLeft","fontSize","htmlFor","value","onChange","e","target","placeholder","id","checked","_c","$RefreshReg$"],"sources":["E:/backup_project/review_1/SGP/frontend/src/pages/AdminLogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"../styles/forms.css\";\r\n\r\nconst AdminLogin = () => {\r\n  // State to handle input fields\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Hardcoded admin credentials (for demo purposes)\r\n  const adminCredentials = {\r\n    email: 'admin@gmail.com',  // Set your admin email\r\n    password: 'admin@1.',  // Set your admin password\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    // Check if the entered credentials match the hardcoded ones\r\n    if (email === adminCredentials.email && password === adminCredentials.password) {\r\n      // Redirect to the admin home if login is successful\r\n      navigate('/admin-home');\r\n    } else {\r\n      // Show error if credentials do not match\r\n      alert('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"storage-section\">\r\n      <div className=\"leftsection\">\r\n      <div className=\"login-button-container\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"admin-login-link\"\r\n                  onClick={handleFacultyLoginRedirect}\r\n                >\r\n                 Faculty Login\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"admin-login-link\"\r\n                  onClick={handleAdminLoginRedirect}\r\n                  style={{ marginLeft: \"10px\" }}\r\n                >\r\n                  Student Login\r\n                </button>\r\n                </div>\r\n      </div>\r\n      <div className=\"rightsection\">\r\n        <h1 className=\"h1-line-height\" style={{ fontSize: '45px' }}>Welcome Admin</h1>\r\n        <br />\r\n        <div className=\"input-form\">\r\n          <div className=\"formsgroup\">\r\n            <label htmlFor=\"inputEmail\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email-id\"\r\n              className=\"formscontrol\"\r\n              id=\"inputEmail\"\r\n            />\r\n          </div>\r\n          <div className=\"formsgroup\">\r\n            <label htmlFor=\"inputPassword\">Password</label>\r\n            <input\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n              className=\"formscontrol\"\r\n              id=\"inputPassword\"\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"showPassword\"\r\n              checked={showPassword}\r\n              onChange={() => setShowPassword(!showPassword)}\r\n            />\r\n            <label htmlFor=\"showPassword\">Show Password</label>\r\n          </div>\r\n          <div className=\"bottom-buttons\">\r\n            <button className=\"button-main\" onClick={handleLogin}>Log In</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}