{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kxrth\\\\OneDrive\\\\Desktop\\\\labfix2\\\\frontend\\\\src\\\\pages\\\\TechnicianComplaints.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TechnicianComplaints = () => {\n  _s();\n  const [complaints, setComplaints] = useState([]);\n  useEffect(() => {\n    const fetchComplaints = async () => {\n      try {\n        // Retrieve the technician ID from local storage\n        const technicianId = localStorage.getItem('technicianId'); // Get technician ID from local storage\n\n        // Ensure technicianId is available\n        if (!technicianId) {\n          console.error('Technician ID not found in local storage');\n          return;\n        }\n        console.log(\"Fetching complaints for technician ID:\", technicianId);\n        const response = await axios.get(`/api/complaints/technician?technicianId=${technicianId}`);\n        setComplaints(response.data);\n      } catch (error) {\n        console.error('Error fetching complaints:', error);\n      }\n    };\n    fetchComplaints();\n  }, []); // No dependencies, will run only on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Assigned Complaints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), complaints.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: complaints.map(complaint => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Complaint: \", complaint.complaint]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Lab: \", complaint.lab]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"System Number: \", complaint.systemNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", complaint.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Severity: \", complaint.severity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, complaint._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No complaints assigned to you.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TechnicianComplaints, \"Q0n/ndeodrSyMT6TnAqmg/BjuLM=\");\n_c = TechnicianComplaints;\nvar _c;\n$RefreshReg$(_c, \"TechnicianComplaints\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TechnicianComplaints","_s","complaints","setComplaints","fetchComplaints","technicianId","localStorage","getItem","console","error","log","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","complaint","lab","systemNumber","status","severity","_id","_c","$RefreshReg$"],"sources":["C:/Users/kxrth/OneDrive/Desktop/labfix2/frontend/src/pages/TechnicianComplaints.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const TechnicianComplaints = () => {\r\n  const [complaints, setComplaints] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchComplaints = async () => {\r\n      try {\r\n        // Retrieve the technician ID from local storage\r\n        const technicianId = localStorage.getItem('technicianId'); // Get technician ID from local storage\r\n\r\n        // Ensure technicianId is available\r\n        if (!technicianId) {\r\n          console.error('Technician ID not found in local storage');\r\n          return;\r\n        }\r\n\r\n        console.log(\"Fetching complaints for technician ID:\", technicianId);\r\n        const response = await axios.get(`/api/complaints/technician?technicianId=${technicianId}`);\r\n\r\n        setComplaints(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching complaints:', error);\r\n      }\r\n    };\r\n\r\n    fetchComplaints();\r\n  }, []); // No dependencies, will run only on component mount\r\n\r\n  return (\r\n    <div>\r\n      <h1>Assigned Complaints</h1>\r\n      {complaints.length > 0 ? (\r\n        <ul>\r\n          {complaints.map(complaint => (\r\n            <li key={complaint._id}>\r\n              <h3>Complaint: {complaint.complaint}</h3>\r\n              <p>Lab: {complaint.lab}</p>\r\n              <p>System Number: {complaint.systemNumber}</p>\r\n              <p>Status: {complaint.status}</p>\r\n              <p>Severity: {complaint.severity}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No complaints assigned to you.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}