{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kxrth\\\\OneDrive\\\\Desktop\\\\labfix2\\\\frontend\\\\src\\\\components\\\\FeatureSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent, Typography, Grid, Container, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  _s();\n  const [labs, setLabs] = useState([]);\n\n  // Fetch labs from the backend\n  useEffect(() => {\n    const fetchLabs = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/labs');\n        setLabs(response.data); // Store the fetched labs in the state\n      } catch (error) {\n        console.error('Error fetching labs:', error);\n      }\n    };\n    fetchLabs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Available Labs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: labs.map(lab => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: lab.labName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: lab.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, lab._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Homepage, \"pu9YGhNVNtXJYFtGqQZLkZ5Ozq4=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","CardContent","Typography","Grid","Container","Box","jsxDEV","_jsxDEV","Homepage","_s","labs","setLabs","fetchLabs","response","get","data","error","console","maxWidth","children","sx","mt","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","lab","item","xs","sm","md","height","component","labName","color","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/kxrth/OneDrive/Desktop/labfix2/frontend/src/components/FeatureSection.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardContent, Typography, Grid, Container, Box } from '@mui/material';\r\n\r\nconst Homepage = () => {\r\n  const [labs, setLabs] = useState([]);\r\n\r\n  // Fetch labs from the backend\r\n  useEffect(() => {\r\n    const fetchLabs = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/labs');\r\n        setLabs(response.data); // Store the fetched labs in the state\r\n      } catch (error) {\r\n        console.error('Error fetching labs:', error);\r\n      }\r\n    };\r\n\r\n    fetchLabs();\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ mt: 4 }}>\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n          Available Labs\r\n        </Typography>\r\n        <Grid container spacing={4}>\r\n          {labs.map((lab) => (\r\n            <Grid item xs={12} sm={6} md={4} key={lab._id}>\r\n              <Card sx={{ height: '100%' }}>\r\n                <CardContent>\r\n                  <Typography variant=\"h5\" component=\"div\">\r\n                    {lab.labName}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {lab.description}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,IAAI,EAAEC,SAAS,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpF,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,gCAAgC,CAAC;QAClEH,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA,CAACH,SAAS;IAACc,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACtBZ,OAAA,CAACF,GAAG;MAACe,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAF,QAAA,gBACjBZ,OAAA,CAACL,UAAU;QAACoB,OAAO,EAAC,IAAI;QAACC,KAAK,EAAC,QAAQ;QAACC,YAAY;QAAAL,QAAA,EAAC;MAErD;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbrB,OAAA,CAACJ,IAAI;QAAC0B,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAX,QAAA,EACxBT,IAAI,CAACqB,GAAG,CAAEC,GAAG,iBACZzB,OAAA,CAACJ,IAAI;UAAC8B,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAAAjB,QAAA,eAC9BZ,OAAA,CAACP,IAAI;YAACoB,EAAE,EAAE;cAAEiB,MAAM,EAAE;YAAO,CAAE;YAAAlB,QAAA,eAC3BZ,OAAA,CAACN,WAAW;cAAAkB,QAAA,gBACVZ,OAAA,CAACL,UAAU;gBAACoB,OAAO,EAAC,IAAI;gBAACgB,SAAS,EAAC,KAAK;gBAAAnB,QAAA,EACrCa,GAAG,CAACO;cAAO;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACbrB,OAAA,CAACL,UAAU;gBAACoB,OAAO,EAAC,OAAO;gBAACkB,KAAK,EAAC,gBAAgB;gBAAArB,QAAA,EAC/Ca,GAAG,CAACS;cAAW;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC,GAV6BI,GAAG,CAACU,GAAG;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWvC,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACnB,EAAA,CA1CID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}