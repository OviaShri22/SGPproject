{"ast":null,"code":"var _jsxFileName = \"E:\\\\backup_project\\\\review_1\\\\SGP\\\\frontend\\\\src\\\\components\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [userId, setUserId] = useState('');\n  useEffect(() => {\n    // Retrieve the user ID (token or userId) from localStorage\n    const token = localStorage.getItem('userId');\n    if (token) {\n      setUserId(token);\n    } else {\n      console.error('User token ID not found in local storage');\n    }\n  }, []);\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    if (!userId) {\n      alert('User ID is required to reset the password.');\n      return;\n    }\n    if (newPassword !== confirmNewPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.put('http://localhost:5000/api/users/reset-password', {\n        token: userId,\n        currentPassword,\n        newPassword\n      });\n      if (response.status === 200) {\n        alert('Password reset successfully');\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmNewPassword('');\n      } else {\n        alert(response.data.message || 'Failed to reset password');\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      alert('An error occurred while resetting the password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordReset,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold\",\n          children: \"Current Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: currentPassword,\n          onChange: e => setCurrentPassword(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold\",\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full py-2 px-4 bg-blue-500 text-white rounded-md\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"ObJUw84/zyECziNKFcsrPBs06y0=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ResetPassword","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","userId","setUserId","token","localStorage","getItem","console","error","handlePasswordReset","e","preventDefault","alert","response","put","status","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["E:/backup_project/review_1/SGP/frontend/src/components/ResetPassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ResetPassword = () => {\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Retrieve the user ID (token or userId) from localStorage\r\n    const token = localStorage.getItem('userId');\r\n    if (token) {\r\n      setUserId(token);\r\n    } else {\r\n      console.error('User token ID not found in local storage');\r\n    }\r\n  }, []);\r\n\r\n  const handlePasswordReset = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!userId) {\r\n      alert('User ID is required to reset the password.');\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmNewPassword) {\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.put('http://localhost:5000/api/users/reset-password', {\r\n        token: userId,\r\n        currentPassword,\r\n        newPassword,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        alert('Password reset successfully');\r\n        setCurrentPassword('');\r\n        setNewPassword('');\r\n        setConfirmNewPassword('');\r\n      } else {\r\n        alert(response.data.message || 'Failed to reset password');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error);\r\n      alert('An error occurred while resetting the password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Reset Password</h1>\r\n      <form onSubmit={handlePasswordReset}>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block font-semibold\">Current Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={currentPassword}\r\n            onChange={(e) => setCurrentPassword(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block font-semibold\">New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block font-semibold\">Confirm New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={confirmNewPassword}\r\n            onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n            required\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full py-2 px-4 bg-blue-500 text-white rounded-md\"\r\n        >\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}