{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kxrth\\\\OneDrive\\\\Desktop\\\\labfix2\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, createContext } from 'react';\n\n// Create a context for authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the AuthContext\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// AuthProvider component that wraps the app and provides authentication data\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null); // Track logged-in user\n\n  const login = user => {\n    // Handle login logic and set the user\n    setCurrentUser(user);\n  };\n  const logout = () => {\n    // Handle logout logic and clear the user\n    setCurrentUser(null);\n  };\n  const value = {\n    currentUser,\n    // Current user data (e.g., email, token)\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"D3+eUn/eYbOcEwoCOjOk5Grmif4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useContext","useState","createContext","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","login","user","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kxrth/OneDrive/Desktop/labfix2/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { useContext, useState, createContext } from 'react';\r\n\r\n// Create a context for authentication\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n\r\n// AuthProvider component that wraps the app and provides authentication data\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null); // Track logged-in user\r\n\r\n    const login = (user) => {\r\n        // Handle login logic and set the user\r\n        setCurrentUser(user);\r\n    };\r\n\r\n    const logout = () => {\r\n        // Handle logout logic and clear the user\r\n        setCurrentUser(null);\r\n    };\r\n\r\n    const value = {\r\n        currentUser, // Current user data (e.g., email, token)\r\n        login,\r\n        logout,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGH,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMI,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,OAAOP,UAAU,CAACK,WAAW,CAAC;AAClC,CAAC;;AAED;AAAAE,EAAA,CAJaD,OAAO;AAKpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtD,MAAMY,KAAK,GAAIC,IAAI,IAAK;IACpB;IACAF,cAAc,CAACE,IAAI,CAAC;EACxB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjB;IACAH,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMI,KAAK,GAAG;IACVL,WAAW;IAAE;IACbE,KAAK;IACLE;EACJ,CAAC;EAED,oBACIX,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAP,QAAA,EAC9BA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACX,GAAA,CAxBWF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}