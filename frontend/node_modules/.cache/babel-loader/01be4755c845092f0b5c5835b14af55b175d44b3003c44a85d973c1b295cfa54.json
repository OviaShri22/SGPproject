{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kxrth\\\\OneDrive\\\\Desktop\\\\labfix2\\\\frontend\\\\src\\\\pages\\\\TechnicianComplaints.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TechnicianComplaints = () => {\n  _s();\n  const [complaints, setComplaints] = useState([]);\n  const technicianId = 'technicianIdHere'; // Replace with the logged-in technician's ID\n\n  useEffect(() => {\n    const fetchComplaints = async () => {\n      try {\n        const response = await axios.get(`/api/complaints?technicianId=${technicianId}`);\n        setComplaints(response.data);\n      } catch (error) {\n        console.error('Error fetching complaints:', error);\n      }\n    };\n    fetchComplaints();\n  }, [technicianId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Assigned Complaints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), complaints.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: complaints.map(complaint => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Complaint: \", complaint.complaint]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Lab: \", complaint.lab]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"System Number: \", complaint.systemNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", complaint.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Severity: \", complaint.severity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, complaint._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No complaints assigned to you.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(TechnicianComplaints, \"Q0n/ndeodrSyMT6TnAqmg/BjuLM=\");\n_c = TechnicianComplaints;\nvar _c;\n$RefreshReg$(_c, \"TechnicianComplaints\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TechnicianComplaints","_s","complaints","setComplaints","technicianId","fetchComplaints","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","complaint","lab","systemNumber","status","severity","_id","_c","$RefreshReg$"],"sources":["C:/Users/kxrth/OneDrive/Desktop/labfix2/frontend/src/pages/TechnicianComplaints.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const TechnicianComplaints = () => {\r\n  const [complaints, setComplaints] = useState([]);\r\n  const technicianId = 'technicianIdHere'; // Replace with the logged-in technician's ID\r\n\r\n  useEffect(() => {\r\n    const fetchComplaints = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/complaints?technicianId=${technicianId}`);\r\n        \r\n        setComplaints(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching complaints:', error);\r\n      }\r\n    };\r\n\r\n    fetchComplaints();\r\n  }, [technicianId]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Assigned Complaints</h1>\r\n      {complaints.length > 0 ? (\r\n        <ul>\r\n          {complaints.map(complaint => (\r\n            <li key={complaint._id}>\r\n              <h3>Complaint: {complaint.complaint}</h3>\r\n              <p>Lab: {complaint.lab}</p>\r\n              <p>System Number: {complaint.systemNumber}</p>\r\n              <p>Status: {complaint.status}</p>\r\n              <p>Severity: {complaint.severity}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No complaints assigned to you.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMQ,YAAY,GAAG,kBAAkB,CAAC,CAAC;;EAEzCT,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,gCAAgCH,YAAY,EAAE,CAAC;QAEhFD,aAAa,CAACG,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDJ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACD,YAAY,CAAC,CAAC;EAElB,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3Bb,UAAU,CAACc,MAAM,GAAG,CAAC,gBACpBjB,OAAA;MAAAY,QAAA,EACGT,UAAU,CAACe,GAAG,CAACC,SAAS,iBACvBnB,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAAY,QAAA,GAAI,aAAW,EAACO,SAAS,CAACA,SAAS;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzChB,OAAA;UAAAY,QAAA,GAAG,OAAK,EAACO,SAAS,CAACC,GAAG;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BhB,OAAA;UAAAY,QAAA,GAAG,iBAAe,EAACO,SAAS,CAACE,YAAY;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9ChB,OAAA;UAAAY,QAAA,GAAG,UAAQ,EAACO,SAAS,CAACG,MAAM;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjChB,OAAA;UAAAY,QAAA,GAAG,YAAU,EAACO,SAAS,CAACI,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAL9BG,SAAS,CAACK,GAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMlB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELhB,OAAA;MAAAY,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CAtCWD,oBAAoB;AAAAwB,EAAA,GAApBxB,oBAAoB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}