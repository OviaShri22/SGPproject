{"ast":null,"code":"var _jsxFileName = \"E:\\\\backup_project\\\\review_1\\\\SGP\\\\frontend\\\\src\\\\pages\\\\ComplaintHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport axios from 'axios';\nimport AdminNavbar from '../components/AdminNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoryOfComplaints = () => {\n  _s();\n  const [solvedComplaints, setSolvedComplaints] = useState([]);\n  useEffect(() => {\n    const fetchSolvedComplaints = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/complaints');\n\n        // Map and split createdAt into separate date and time fields\n        const processedComplaints = response.data.map(complaint => {\n          const [date, time] = complaint.createdAt.split('T'); // Split at \"T\"\n          return {\n            ...complaint,\n            date,\n            time: time ? time.split('.')[0] : 'N/A' // Clean time string\n          };\n        });\n        setSolvedComplaints(processedComplaints); // Update state with processed data\n      } catch (error) {\n        console.error('Error fetching solved complaints:', error);\n      }\n    };\n    fetchSolvedComplaints();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-32\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"History of Solved Complaints\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Roll No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Expertise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: solvedComplaints.map((complaint, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: complaint.rollNo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: complaint.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: complaint.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: complaint.expertise\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: complaint.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: complaint.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: complaint.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoryOfComplaints, \"Qc8qNTuuvxW4gHyzcoiPHqvO3w0=\");\n_c = HistoryOfComplaints;\nexport default HistoryOfComplaints;\nvar _c;\n$RefreshReg$(_c, \"HistoryOfComplaints\");","map":{"version":3,"names":["React","useEffect","useState","Box","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","axios","AdminNavbar","jsxDEV","_jsxDEV","HistoryOfComplaints","_s","solvedComplaints","setSolvedComplaints","fetchSolvedComplaints","response","get","processedComplaints","data","map","complaint","date","time","createdAt","split","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","variant","gutterBottom","component","index","rollNo","email","type","expertise","status","_c","$RefreshReg$"],"sources":["E:/backup_project/review_1/SGP/frontend/src/pages/ComplaintHistory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box, Container, Typography, Table, TableBody, TableCell, TableContainer,\r\n  TableHead, TableRow, Paper\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport AdminNavbar from '../components/AdminNavbar';\r\n\r\nconst HistoryOfComplaints = () => {\r\n  const [solvedComplaints, setSolvedComplaints] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSolvedComplaints = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/complaints');\r\n        \r\n        // Map and split createdAt into separate date and time fields\r\n        const processedComplaints = response.data.map(complaint => {\r\n          const [date, time] = complaint.createdAt.split('T'); // Split at \"T\"\r\n          return {\r\n            ...complaint,\r\n            date,\r\n            time: time ? time.split('.')[0] : 'N/A', // Clean time string\r\n          };\r\n        });\r\n\r\n        setSolvedComplaints(processedComplaints); // Update state with processed data\r\n      } catch (error) {\r\n        console.error('Error fetching solved complaints:', error);\r\n      }\r\n    };\r\n  \r\n    fetchSolvedComplaints();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <AdminNavbar />\r\n      <Container className=\"mt-32\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          History of Solved Complaints\r\n        </Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Roll No</TableCell>\r\n                <TableCell>Email</TableCell>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell>Expertise</TableCell>\r\n                <TableCell>Date</TableCell>\r\n                <TableCell>Time</TableCell>\r\n                <TableCell>Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {solvedComplaints.map((complaint, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{complaint.rollNo}</TableCell>\r\n                  <TableCell>{complaint.email}</TableCell>\r\n                  <TableCell>{complaint.type}</TableCell>\r\n                  <TableCell>{complaint.expertise}</TableCell>\r\n                  <TableCell>{complaint.date}</TableCell>\r\n                  <TableCell>{complaint.time}</TableCell>\r\n                  <TableCell>{complaint.status}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryOfComplaints;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}