{"ast":null,"code":"var _jsxFileName = \"E:\\\\sgp_project\\\\review_1\\\\SGP\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\n// Hook to access AuthContext\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// AuthProvider component that wraps the rest of the app\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // You would replace this logic with actual login/auth code.\n  useEffect(() => {\n    const user = localStorage.getItem('user'); // Example: Get user from localStorage\n    setCurrentUser(user);\n  }, []);\n  const value = {\n    currentUser,\n    login: user => setCurrentUser(user),\n    // Define your login logic here\n    logout: () => setCurrentUser(null) // Define your logout logic here\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","createContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","user","localStorage","getItem","value","login","logout","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/sgp_project/review_1/SGP/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\n\r\n// Create the AuthContext\r\nconst AuthContext = React.createContext();\r\n\r\n// Hook to access AuthContext\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n\r\n// AuthProvider component that wraps the rest of the app\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    // You would replace this logic with actual login/auth code.\r\n    useEffect(() => {\r\n        const user = localStorage.getItem('user'); // Example: Get user from localStorage\r\n        setCurrentUser(user);\r\n    }, []);\r\n\r\n    const value = {\r\n        currentUser,\r\n        login: (user) => setCurrentUser(user),  // Define your login logic here\r\n        logout: () => setCurrentUser(null),     // Define your logout logic here\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n    "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE9D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAa,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,OAAOR,UAAU,CAACK,WAAW,CAAC;AAClC,CAAC;;AAED;AAAAG,EAAA,CAJaD,OAAO;AAKpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMY,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3CH,cAAc,CAACC,IAAI,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG;IACVL,WAAW;IACXM,KAAK,EAAGJ,IAAI,IAAKD,cAAc,CAACC,IAAI,CAAC;IAAG;IACxCK,MAAM,EAAEA,CAAA,KAAMN,cAAc,CAAC,IAAI,CAAC,CAAM;EAC5C,CAAC;EAED,oBACIT,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACH,KAAK,EAAEA,KAAM;IAAAP,QAAA,EAC9BA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACb,GAAA,CApBWF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}