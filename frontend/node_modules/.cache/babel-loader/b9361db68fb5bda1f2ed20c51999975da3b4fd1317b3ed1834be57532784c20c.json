{"ast":null,"code":"var _jsxFileName = \"E:\\\\backup_project\\\\review_1\\\\SGP\\\\frontend\\\\src\\\\components\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmNewPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const email = localStorage.getItem('email'); // Retrieve email from storage\n      if (!email) {\n        alert(\"User email is missing. Please log in again.\");\n        setLoading(false);\n        return;\n      }\n      const response = await fetch('http://localhost:5000/api/users/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n          email // Add email header\n        },\n        body: JSON.stringify({\n          currentPassword,\n          newPassword\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert('Password reset successfully');\n      } else {\n        alert(result.message || 'Failed to reset password');\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      alert('An error occurred while resetting the password. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordReset,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold\",\n          children: \"Current Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: currentPassword,\n          onChange: e => setCurrentPassword(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold\",\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full py-2 px-4 bg-blue-500 text-white rounded-md\",\n        disabled: loading,\n        children: loading ? 'Resetting...' : 'Reset Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"Bfe2et4SBmx3Rc0ZBvj01tmZK+k=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResetPassword","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","loading","setLoading","handlePasswordReset","e","preventDefault","alert","email","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","result","json","ok","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["E:/backup_project/review_1/SGP/frontend/src/components/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ResetPassword = () => {\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handlePasswordReset = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newPassword !== confirmNewPassword) {\r\n      alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const email = localStorage.getItem('email'); // Retrieve email from storage\r\n      if (!email) {\r\n        alert(\"User email is missing. Please log in again.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('http://localhost:5000/api/users/reset-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          email, // Add email header\r\n        },\r\n        body: JSON.stringify({\r\n          currentPassword,\r\n          newPassword,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert('Password reset successfully');\r\n      } else {\r\n        alert(result.message || 'Failed to reset password');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error);\r\n      alert('An error occurred while resetting the password. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Reset Password</h1>\r\n      <form onSubmit={handlePasswordReset}>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block font-semibold\">Current Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={currentPassword}\r\n            onChange={(e) => setCurrentPassword(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block font-semibold\">New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block font-semibold\">Confirm New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={confirmNewPassword}\r\n            onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full py-2 px-4 bg-blue-500 text-white rounded-md\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Resetting...' : 'Reset Password'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}