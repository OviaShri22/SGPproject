{"ast":null,"code":"var _jsxFileName = \"E:\\\\backup_project\\\\review_1\\\\SGP\\\\frontend\\\\src\\\\components\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccessMessage('');\n    if (newPassword !== confirmNewPassword) {\n      setError('New passwords do not match.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const userId = localStorage.getItem('token'); // Assume user ID is stored in localStorage\n      if (!userId) {\n        setError('User ID not found in local storage.');\n        setLoading(false);\n        return;\n      }\n      const response = await axios.put(`http://localhost:5000/api/users/reset-password`, {\n        userId,\n        currentPassword,\n        newPassword\n      });\n      setSuccessMessage(response.data.message || 'Password reset successfully.');\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmNewPassword('');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error resetting password:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred while resetting the password.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-500\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordReset,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold\",\n          children: \"Current Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: currentPassword,\n          onChange: e => setCurrentPassword(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-semibold\",\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full py-2 px-4 bg-blue-500 text-white rounded-md\",\n        disabled: loading,\n        children: loading ? 'Resetting...' : 'Reset Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"oQKRthQRMGiTM8gTDHsfF4XzMY8=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ResetPassword","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","loading","setLoading","error","setError","successMessage","setSuccessMessage","handlePasswordReset","e","preventDefault","userId","localStorage","getItem","response","put","data","message","_error$response","_error$response$data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["E:/backup_project/review_1/SGP/frontend/src/components/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ResetPassword = () => {\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handlePasswordReset = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccessMessage('');\r\n\r\n    if (newPassword !== confirmNewPassword) {\r\n      setError('New passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const userId = localStorage.getItem('token'); // Assume user ID is stored in localStorage\r\n      if (!userId) {\r\n        setError('User ID not found in local storage.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await axios.put(`http://localhost:5000/api/users/reset-password`, {\r\n        userId,\r\n        currentPassword,\r\n        newPassword,\r\n      });\r\n\r\n      setSuccessMessage(response.data.message || 'Password reset successfully.');\r\n      setCurrentPassword('');\r\n      setNewPassword('');\r\n      setConfirmNewPassword('');\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error);\r\n      setError(\r\n        error.response?.data?.message || 'An error occurred while resetting the password.'\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Reset Password</h1>\r\n      {error && <p className=\"text-red-500\">{error}</p>}\r\n      {successMessage && <p className=\"text-green-500\">{successMessage}</p>}\r\n      <form onSubmit={handlePasswordReset}>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block font-semibold\">Current Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={currentPassword}\r\n            onChange={(e) => setCurrentPassword(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block font-semibold\">New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block font-semibold\">Confirm New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={confirmNewPassword}\r\n            onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n            required\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full py-2 px-4 bg-blue-500 text-white rounded-md\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Resetting...' : 'Reset Password'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMkB,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,QAAQ,CAAC,EAAE,CAAC;IACZE,iBAAiB,CAAC,EAAE,CAAC;IAErB,IAAIT,WAAW,KAAKE,kBAAkB,EAAE;MACtCK,QAAQ,CAAC,6BAA6B,CAAC;MACvC;IACF;IAEA,IAAI;MACFF,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMQ,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC9C,IAAI,CAACF,MAAM,EAAE;QACXN,QAAQ,CAAC,qCAAqC,CAAC;QAC/CF,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA,MAAMW,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,gDAAgD,EAAE;QACjFJ,MAAM;QACNf,eAAe;QACfE;MACF,CAAC,CAAC;MAEFS,iBAAiB,CAACO,QAAQ,CAACE,IAAI,CAACC,OAAO,IAAI,8BAA8B,CAAC;MAC1EpB,kBAAkB,CAAC,EAAE,CAAC;MACtBE,cAAc,CAAC,EAAE,CAAC;MAClBE,qBAAqB,CAAC,EAAE,CAAC;IAC3B,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAc,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAAChB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDC,QAAQ,CACN,EAAAa,eAAA,GAAAd,KAAK,CAACU,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,OAAO,KAAI,iDACnC,CAAC;IACH,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEV,OAAA;IAAK4B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnC7B,OAAA;MAAI4B,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1DtB,KAAK,iBAAIX,OAAA;MAAG4B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAElB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDpB,cAAc,iBAAIb,OAAA;MAAG4B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAEhB;IAAc;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrEjC,OAAA;MAAMkC,QAAQ,EAAEnB,mBAAoB;MAAAc,QAAA,gBAClC7B,OAAA;QAAK4B,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnB7B,OAAA;UAAO4B,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChEjC,OAAA;UACEmC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEjC,eAAgB;UACvBkC,QAAQ,EAAGrB,CAAC,IAAKZ,kBAAkB,CAACY,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;UACpDR,SAAS,EAAC,oDAAoD;UAC9DW,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjC,OAAA;QAAK4B,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnB7B,OAAA;UAAO4B,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5DjC,OAAA;UACEmC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE/B,WAAY;UACnBgC,QAAQ,EAAGrB,CAAC,IAAKV,cAAc,CAACU,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;UAChDR,SAAS,EAAC,oDAAoD;UAC9DW,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjC,OAAA;QAAK4B,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnB7B,OAAA;UAAO4B,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpEjC,OAAA;UACEmC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE7B,kBAAmB;UAC1B8B,QAAQ,EAAGrB,CAAC,IAAKR,qBAAqB,CAACQ,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;UACvDR,SAAS,EAAC,oDAAoD;UAC9DW,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjC,OAAA;QACEmC,IAAI,EAAC,QAAQ;QACbP,SAAS,EAAC,oDAAoD;QAC9DY,QAAQ,EAAE/B,OAAQ;QAAAoB,QAAA,EAEjBpB,OAAO,GAAG,cAAc,GAAG;MAAgB;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA9FID,aAAa;AAAAwC,EAAA,GAAbxC,aAAa;AAgGnB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}